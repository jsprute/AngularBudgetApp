{"version":3,"sources":["./src/app/admin/pages/tables/account-type/account-type.component.ts","./src/app/admin/pages/tables/account-type/account-type.component.html","./src/environments/environment.ts","./src/app/admin/components/forms/account-type-form/account-type-form.component.ts","./src/app/admin/components/forms/account-type-form/account-type-form.component.html","./src/app/shared/components/side-menu-segment/side-menu-segment.component.ts","./src/app/shared/components/side-menu-segment/side-menu-segment.component.html","./src/app/shared/services/meta.service.ts","./src/app/shared/entities/entity.ts","./src/app/shared/shared.module.ts","./src/app/admin/pages/summary-page/summary-page.component.ts","./src/app/admin/pages/summary-page/summary-page.component.html","./src/app/budget/budget.module.ts","./src/app/admin/components/forms/account-form/account-form.component.ts","./src/app/admin/components/forms/account-form/account-form.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/budget/pages/summary-page/summary-page.component.ts","./src/app/budget/pages/summary-page/summary-page.component.html","./src/app/app.module.ts","./src/app/shared/entities/account.entity.ts","./src/app/shared/components/pop-up/pop-up.component.ts","./src/app/shared/components/pop-up/pop-up.component.html","./src/app/admin/admin.module.ts","./src/app/admin/pages/tables/account/account.component.ts","./src/app/admin/pages/tables/account/account.component.html","./src/app/shared/components/simple-table/simple-table.component.ts","./src/app/shared/components/simple-table/simple-table.component.html","./src/app/shared/entities/account-type.entity.ts","./src/app/shared/components/side-menu/side-menu.component.ts","./src/app/shared/components/side-menu/side-menu.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport { AccountType } from '../../../../shared/entities/account-type.entity'\nimport { MetaService } from '../../../../shared/services/meta.service'\nimport { PopUpComponent } from '../../../../shared/components/pop-up/pop-up.component'\nimport { AccountTypeFormComponent } from 'src/app/admin/components/forms/account-type-form/account-type-form.component';\n\n@Component({\n  selector: 'app-account-type',\n  templateUrl: './account-type.component.html',\n  styleUrls: ['./account-type.component.scss']\n})\nexport class AccountTypeComponent implements OnInit {\n\n  @ViewChild('PopUpRecordForm')\n  popupForm?: PopUpComponent;\n\n  @ViewChild('RecordForm')\n  recordForm?: AccountTypeFormComponent;\n\n  @ViewChild('PopUpConfirm')\n  popupConfirm?: PopUpComponent;\n  \n  //@ts-ignore\n  public records: AccountType[];\n\n  public selectedRecord?: AccountType;\n\n  constructor(private metaService: MetaService ) { }\n\n  ngOnInit(): void {\n    this.refreshData();\n  }\n\n  trackById(index: number, record: AccountType): number {\n    if(record.id)\n      return record.id;\n    else\n      return -1;\n  }\n\n  addRecord(): void {\n    if(this.popupForm){\n      this.selectedRecord = undefined;\n      this.popupForm.show()\n      .then(() => {\n        this.refreshData();\n      });\n    }\n  }\n\n  editRecord(id: number): void {\n    if(this.popupForm){\n      this.selectedRecord = this.records.filter(record => record.id==id)[0];\n      this.recordForm?.setRecord(this.selectedRecord);\n      this.popupForm.show()\n      .then(() => {\n        this.selectedRecord = undefined;\n        this.refreshData();\n      });\n    }\n  }\n\n  deleteRecord(id: number): void {\n    if(this.popupConfirm){\n      this.selectedRecord = this.records.filter(record => record.id==id)[0];\n      this.popupConfirm.show()\n      .then(() => {\n        this.selectedRecord = undefined;\n        this.refreshData();\n      });\n    }\n  }\n\n  confirmDeleteRecord(confirm: boolean): void {\n    if(confirm && this.selectedRecord?.id){\n      this.metaService.deleteAccountType(this.selectedRecord.id).subscribe(()=>{\n        this.refreshData();\n      });\n    }\n    this.popupConfirm?.close();\n  }\n\n  updateRecord(accountType: AccountType|null){\n    if(accountType){\n      if(accountType.id){\n        this.metaService.updateAccountType(accountType).subscribe((accountType: AccountType)=>{\n          this.popupForm?.close();\n      });\n    }\n    else{\n        this.metaService.createAccountType(accountType).subscribe((accountType: AccountType)=>{\n          this.popupForm?.close();\n      });\n    }\n    }\n    else {\n      this.popupForm?.close();\n    }\n  }\n\n  cancelRecord(){\n    this.popupForm?.close();\n  }\n\n  private refreshData(){\n    this.metaService.getAccountTypes().subscribe((accountTypes: AccountType[])=>{\n      this.records = accountTypes;\n    });\n  }\n\n}\n","<app-pop-up #PopUpRecordForm [tplRef]=\"MyFormTemplate\"></app-pop-up>\n<app-pop-up #PopUpConfirm [tplRef]=\"ConfirmTemplate\"></app-pop-up>\n<ng-template #MyFormTemplate>\n        <app-account-type-form #RecordForm (created)=\"updateRecord($event)\" ></app-account-type-form>\n</ng-template>\n<ng-template #ConfirmTemplate>\n        <h1>Delete {{selectedRecord?.name}} ?</h1>\n        <button (click)=\"confirmDeleteRecord(true)\">Confirm</button>\n        <button (click)=\"confirmDeleteRecord(false)\">Cancel</button>\n</ng-template>\n<h1>Account Types</h1>\n<app-simple-table \n        [columns]='[\"name\"]'\n        [records]='records'\n        [addAction]='addRecord.bind(this)'\n        [editAction]='editRecord.bind(this)'\n        [deleteAction]='deleteRecord.bind(this)'>\n</app-simple-table>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AccountType } from '../../../../shared/entities/account-type.entity';\n\n@Component({\n  selector: 'app-account-type-form',\n  templateUrl: './account-type-form.component.html',\n  styleUrls: ['./account-type-form.component.scss']\n})\nexport class AccountTypeFormComponent implements OnInit {\n\n  @Output()\n  created: EventEmitter<AccountType|null> = new EventEmitter<AccountType|null>();\n\n  id?: number;\n\n  @Input()\n  updateAction?: (accountType: AccountType) => void;\n\n  @Input()\n  cancelAction?: () => void;\n\n  //@ts-ignore\n  formGroup: FormGroup;\n  //@ts-ignore\n  accountType: AccountType;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.formGroup = new FormGroup({\n      name: new FormControl('name', [Validators.required])\n    });\n }\n\n  public setRecord(record: AccountType){\n    this.id = record.id;\n    this.formGroup.controls['name'].setValue(record.name);\n  }\n\n  public update(){\n    if (this.formGroup?.valid) {\n      const rawValue: any = this.formGroup.getRawValue();\n      for (const key of Object.keys(rawValue)) {\n        rawValue[key] = rawValue[key] === null ? undefined : rawValue[key];\n      }\n      let accountType: AccountType;\n\n      if(this.id){\n        accountType = new AccountType(rawValue.name, this.id);\n      }\n      else {\n        accountType = new AccountType(rawValue.name);\n      }\n      this.created.emit(accountType);\n      this.formGroup.reset();\n      this.id = undefined;\n    }\n  }\n\n  public cancel(){\n    if(this.formGroup){\n      this.formGroup.reset();\n    }\n    this.created.emit(null);\n  }\n\n}\n","<h3>Account Type</h3>\n<form [formGroup]=\"formGroup\" novalidate>\n    <ul>\n      <li>\n        <input formControlName=\"name\" type=\"text\" placeholder=\"Name\" required/>\n      </li>\n    </ul>\n    <button type=\"button\" (click)=\"update()\">Accept</button>\n    <button type=\"button\" (click)=\"cancel()\">Cancel</button>\n</form>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { trigger, state, style, transition, animate, group } from '@angular/animations';\n\n\n@Component({\n  selector: 'app-side-menu-segment',\n  templateUrl: './side-menu-segment.component.html',\n  styleUrls: ['./side-menu-segment.component.scss'],\n  animations: [\n    trigger('toggleBox', [\n      state('open', style({\n        opacity: '1'\n      })),\n      state('closed', style({\n        opacity: '0',\n        height: 0\n      })),\n      transition('open => closed', [\n        animate('.2s')\n      ]),\n      transition('closed => open', [\n        animate('.2s')\n      ]),\n    ])\n  ]\n})\nexport class SideMenuSegmentComponent implements OnInit {\n\n  constructor() { }\n\n  @Input() \n  content: any;\n  openState: boolean = false;\n\n  ngOnInit(): void {\n  }\n\n  toggleView(): void {\n    this.openState = !this.openState;\n  }\n\n}\n","<span (click)=\"toggleView()\">{{openState?'x':'+'}}{{content.title}}</span>\n<ul [@toggleBox]=\"openState?'open':'closed'\">\n    <li  *ngFor=\"let link of content.links\">\n        <a routerLink=\"{{link.url}}\" routerLinkActive=\"active\">{{link.title}}</a>\n    </li>\n    <li *ngFor=\"let segment of content.segments\">\n        <app-side-menu-segment [content]=\"segment\"></app-side-menu-segment>\n    </li>\n</ul>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AccountType, Account } from './../entities'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MetaService {\n\n  private baseUrl = \"http://localhost:8080/api/v1\";\n\n  constructor(private http: HttpClient) { }\n\n  ////////////////////////\n  // ACCOUNT TYPES\n  ////////////////////////  \n  getAccountTypes(): Observable<AccountType[]>{\n    return this.http.get<AccountType[]>(`${this.baseUrl}/accounttypes`);\n  }\n\n  createAccountType(record: AccountType): Observable<AccountType>{\n    let options = { headers: new HttpHeaders().set('Content-Type', 'application/json') };\n    return this.http.post<AccountType>(`${this.baseUrl}/accounttypes`, JSON.stringify(record).replace(/\"_/g, '\"'),options);\n  }\n\n  updateAccountType(record: AccountType): Observable<AccountType>{\n    let options = { headers: new HttpHeaders().set('Content-Type', 'application/json') };\n    return this.http.put<AccountType>(`${this.baseUrl}/accounttypes/${record.id}`, JSON.stringify(record).replace(/\"_/g, '\"'), options);\n  } \n  \n  getAccountType(id: number): Observable<AccountType>{\n    return this.http.get<AccountType>(`${this.baseUrl}/accounttypes/${id}`);\n  }\n  \n  deleteAccountType(id: number): Observable<void>{\n    return this.http.delete<void>(`${this.baseUrl}/accounttypes/${id}`);\n  }\n\n  //////////////////////////\n  // ACCOUNTS\n  /////////////////////////\n  getAccounts(): Observable<Account[]>{\n    return this.http.get<Account[]>(`${this.baseUrl}/accounts`);\n  }\n\n  createAccount(record: Account): Observable<Account>{\n    let options = { headers: new HttpHeaders().set('Content-Type', 'application/json') };\n    return this.http.post<Account>(`${this.baseUrl}/accounts`, JSON.stringify(record).replace(/\"_/g, '\"'),options);\n  }\n\n  updateAccount(record: Account): Observable<Account>{\n    let options = { headers: new HttpHeaders().set('Content-Type', 'application/json') };\n    return this.http.put<Account>(`${this.baseUrl}/accounts/${record.id}`, JSON.stringify(record).replace(/\"_/g, '\"'), options);\n  } \n  \n  getAccount(id: number): Observable<Account>{\n    return this.http.get<Account>(`${this.baseUrl}/accounts/${id}`);\n  }\n  \n  deleteAccount(id: number): Observable<void>{\n    return this.http.delete<void>(`${this.baseUrl}/accounts/${id}`);\n  }\n}\n","\nexport class Entity {\n\n    private _id?: number;\n\n    public constructor (\n        id?: number\n    ){\n        if(id){\n            this._id = id\n        }\n    }\n\n    get id(): number | undefined {\n        return this._id;\n    }\n\n    set id(id: number | undefined) {\n        this._id = id;\n    }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SideMenuComponent } from './components/side-menu/side-menu.component'\nimport { AppRoutingModule } from './../app-routing.module';\nimport { HttpClient } from '@angular/common/http';\nimport { PopUpComponent } from './components/pop-up/pop-up.component';\nimport { SideMenuSegmentComponent } from './components/side-menu-segment/side-menu-segment.component';\nimport { SimpleTableComponent } from './components/simple-table/simple-table.component';\n\n@NgModule({\n  declarations: [SideMenuComponent, PopUpComponent, SideMenuSegmentComponent, SimpleTableComponent],\n  imports: [\n    CommonModule,\n    AppRoutingModule\n  ],\n  providers: [\n    HttpClient\n  ],\n  exports: [SideMenuComponent,SimpleTableComponent,PopUpComponent]\n})\nexport class SharedModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'admin-summary-page',\n  templateUrl: './summary-page.component.html',\n  styleUrls: ['./summary-page.component.scss']\n})\nexport class SummaryPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>admin-summary-page works!</p>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {SummaryPageComponent} from './pages/summary-page/summary-page.component';\n\n\n@NgModule({\n  declarations: [SummaryPageComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [SummaryPageComponent]\n})\nexport class BudgetModule { }\n","import { Component, OnInit, Input, EventEmitter, Output  } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AccountType } from 'src/app/shared/entities/account-type.entity';\nimport { Account } from '../../../../shared/entities/account.entity'\nimport { Entity } from '../../../../shared/entities/entity';\nimport { MetaService } from '../../../../shared/services/meta.service';\n\n@Component({\n  selector: 'app-account-form',\n  templateUrl: './account-form.component.html',\n  styleUrls: ['./account-form.component.scss']\n})\nexport class AccountFormComponent implements OnInit {\n\n  @Output()\n  created: EventEmitter<Account|null> = new EventEmitter<Account|null>();\n\n  id?: number;\n\n  @Input()\n  updateAction?: (account: Account) => void;\n\n  @Input()\n  cancelAction?: () => void;\n\n  //@ts-ignore\n  formGroup: FormGroup;\n  //@ts-ignore\n  account: Account;\n\n  accountTypes: AccountType[] = [];\n\n  constructor(private metaService: MetaService ) { }\n\n  ngOnInit(): void {\n    this.formGroup = new FormGroup({\n      name: new FormControl('name', [Validators.required]),\n      accountType: new FormControl('accountType',[Validators.required])\n    });\n\n    this.metaService.getAccountTypes().subscribe((accountTypes)=>{\n      this.accountTypes = accountTypes;\n    });\n    \n  }\n\n  public setRecord(record: Account){\n    this.id = record.id;\n    this.formGroup.controls['name'].setValue(record.name);\n    this.formGroup.controls['accountType'].setValue(record.accountType.id);\n  }\n\n  public update(){\n    if (this.formGroup?.valid) {\n      \n      const rawValue: any = this.formGroup.getRawValue();\n      for (const key of Object.keys(rawValue)) {\n        rawValue[key] = rawValue[key] === null ? undefined : rawValue[key];\n      }\n      let account: Account;\n\n      if(this.id){\n        account = new Account(rawValue.name, new Entity(parseInt(rawValue.accountType)) as AccountType, this.id);\n      }\n      else {\n        account = new Account(rawValue.name, new Entity(parseInt(rawValue.accountType)) as AccountType);\n      }\n      \n\n      this.formGroup.reset();\n      this.created.emit(account);\n    }\n  }\n\n  public cancel(){\n    if(this.formGroup){\n      this.formGroup.reset();\n    }\n    this.created.emit(null);\n  }\n\n}\n","<h3>Account</h3>\n<form [formGroup]=\"formGroup\" novalidate>\n  <ul>\n    <li>\n      <input formControlName=\"name\" type=\"text\" placeholder=\"Name\" required/>\n    </li>\n  </ul>\n  <ul>\n    <li>\n      <select formControlName=\"accountType\"  required >\n        <option *ngFor=\"let accountType of accountTypes\" value=\"{{accountType.id}}\">{{accountType.name}}</option>\n      </select>\n    </li>\n  </ul>\n    <button type=\"button\" (click)=\"update()\">Accept</button>\n    <button type=\"button\" (click)=\"cancel()\">Cancel</button>\n</form>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'budget-frontend';\n}\n","<div class=\"sidenav\">\n  <app-side-menu></app-side-menu>\n</div>\n<div class=\"main\">\n  <div class=\"container\">\n    <h1>Angular Router App</h1>\n  </div>\n  <div class=\"container\">\n    <router-outlet></router-outlet>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'budget-summary-page',\n  templateUrl: './summary-page.component.html',\n  styleUrls: ['./summary-page.component.scss']\n})\nexport class SummaryPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>budget-summary-page works!</p>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from  '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\n\nimport {BudgetModule} from './budget/budget.module'\nimport {AdminModule} from './admin/admin.module'\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SharedModule } from './shared/shared.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    AdminModule,\n    BudgetModule,\n    SharedModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {AccountType} from './account-type.entity';\nimport { Entity } from './entity';\n\nexport class Account extends Entity{\n\n    public constructor (\n        private _name: string,\n        private _accountType: AccountType,\n        id?: number\n    ){\n        super(id);\n    }\n\n    get name(): string {\n        return this._name;\n    }\n\n    set name(name: string) {\n        this._name = name;\n    }\n\n    get accountType(): AccountType {\n        return this._accountType;\n    }\n\n    set accountType(accountType: AccountType) {\n        this._accountType = accountType;\n    }\n\n }","import { Component, OnInit, Input, TemplateRef } from '@angular/core';\n\n@Component({\n  selector: 'app-pop-up',\n  templateUrl: './pop-up.component.html',\n  styleUrls: ['./pop-up.component.scss']\n})\nexport class PopUpComponent implements OnInit {\n\n  _visible: boolean = false;\n  _resolve: any;\n  _reject: any;\n\n  @Input()\n  //@ts-ignore \n  tplRef: TemplateRef<any>;\n\n  constructor() {}\n\n  ngOnInit(): void {\n  }\n\n  async show(): Promise<void> {\n    this._visible = true;\n    \n    let _this: PopUpComponent = this;\n\n    return new Promise(function(resolve: any, reject: any) {\n        _this._resolve = resolve;        \n        _this._reject = reject;\n    }.bind(this));\n  }\n\n  close(){\n    this._resolve();\n    this._visible = false;\n  }\n\n}\n","<div class=\"cover\" [hidden]=\"!_visible\">\n    <div class=\"pop-card\">\n        <hr/>\n        <ng-content *ngTemplateOutlet=\"tplRef\"></ng-content>\n        <hr/>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SummaryPageComponent } from './pages/summary-page/summary-page.component';\nimport { AccountTypeComponent } from './pages/tables/account-type/account-type.component';\nimport { MetaService } from '../shared/services/meta.service';\nimport { SharedModule } from '../shared/shared.module';\nimport {AccountTypeFormComponent} from './components/forms/account-type-form/account-type-form.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AccountComponent } from './pages/tables/account/account.component';\nimport { AccountFormComponent } from './components/forms/account-form/account-form.component';\n\n\n@NgModule({\n  declarations: [\n    SummaryPageComponent, \n    AccountTypeComponent, \n    AccountTypeFormComponent, \n    AccountComponent, \n    AccountFormComponent\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n    MetaService\n  ],\n  exports: [\n    SummaryPageComponent, \n    AccountTypeComponent\n  ]\n})\nexport class AdminModule { }\n","import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport { Account } from '../../../../shared/entities'\nimport { MetaService } from '../../../../shared/services/meta.service'\nimport { PopUpComponent } from '../../../../shared/components/pop-up/pop-up.component'\nimport { AccountFormComponent } from 'src/app/admin/components/forms/account-form/account-form.component';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.scss']\n})\nexport class AccountComponent implements OnInit {\n\n  @ViewChild('PopUpRecordForm')\n  popupForm?: PopUpComponent;\n\n  @ViewChild('RecordForm')\n  recordForm?: AccountFormComponent;\n\n  @ViewChild('PopUpConfirm')\n  popupConfirm?: PopUpComponent;\n  \n  //@ts-ignore\n  public records: Account[];\n\n  public selectedRecord?: Account;\n\n  constructor(private metaService: MetaService ) { }\n\n  ngOnInit(): void {\n    this.refreshData();\n  }\n\n  trackById(index: number, record: Account): number {\n    if(record.id)\n      return record.id;\n    else\n      return -1;\n  }\n\n  addRecord(): void {\n    if(this.popupForm){\n      this.selectedRecord = undefined;\n      this.popupForm.show()\n      .then(() => {\n        this.refreshData();\n      });\n    }\n  }\n\n  editRecord(id: number): void {\n    if(this.popupForm){\n      this.selectedRecord = this.records.filter(record => record.id==id)[0];\n      this.recordForm?.setRecord(this.selectedRecord);\n      this.popupForm.show()\n      .then(() => {\n        this.selectedRecord = undefined;\n        this.refreshData();\n      });\n    }\n  }\n\n  deleteRecord(id: number): void {\n    if(this.popupConfirm){\n      this.selectedRecord = this.records.filter(record => record.id==id)[0];\n      this.popupConfirm.show()\n      .then(() => {\n        this.selectedRecord = undefined;\n        this.refreshData();\n      });\n    }\n  }\n\n  confirmDeleteRecord(confirm: boolean): void {\n    if(confirm && this.selectedRecord?.id){\n      this.metaService.deleteAccount(this.selectedRecord.id).subscribe(()=>{\n        this.refreshData();\n      });\n    }\n    this.popupConfirm?.close();\n  }\n\n  updateRecord(account: Account|null){\n    if(account){\n      if(account.id){\n        this.metaService.updateAccount(account).subscribe((account: Account)=>{\n          this.popupForm?.close();\n      });\n    }\n    else{\n        this.metaService.createAccount(account).subscribe((account: Account)=>{\n          this.popupForm?.close();\n      });\n    }\n    }\n    else {\n      this.popupForm?.close();\n    }\n  }\n\n  cancelRecord(){\n    this.popupForm?.close();\n  }\n\n  private refreshData(){\n    this.metaService.getAccounts().subscribe((accounts: Account[])=>{\n      this.records = accounts;\n    });\n  }\n\n}\n","<app-pop-up #PopUpRecordForm [tplRef]=\"MyFormTemplate\"></app-pop-up>\n<app-pop-up #PopUpConfirm [tplRef]=\"ConfirmTemplate\"></app-pop-up>\n<ng-template #MyFormTemplate>\n        <app-account-form #RecordForm (created)=\"updateRecord($event)\" ></app-account-form>\n</ng-template>\n<ng-template #ConfirmTemplate>\n        <h1>Delete {{selectedRecord?.name}} ?</h1>\n        <button (click)=\"confirmDeleteRecord(true)\">Confirm</button>\n        <button (click)=\"confirmDeleteRecord(false)\">Cancel</button>\n</ng-template>\n<h1>Accounts</h1>\n<app-simple-table \n        [columns]='[\"name\",\"accountType.name\"]'\n        [records]='records'\n        [addAction]='addRecord.bind(this)'\n        [editAction]='editRecord.bind(this)'\n        [deleteAction]='deleteRecord.bind(this)'>\n</app-simple-table>\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-simple-table',\n  templateUrl: './simple-table.component.html',\n  styleUrls: ['./simple-table.component.scss']\n})\nexport class SimpleTableComponent implements OnInit {\n\n  @Input()\n  columns:string[] = [];\n\n  @Input()\n  records:any[] = [];\n\n  @Input()\n  addAction?: () => void;\n\n  @Input()\n  editAction?: (id: number) => void;\n\n  @Input()\n  deleteAction?: (id: number) => void;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  deleteRecord(id: number) {\n    if(this.deleteAction)this.deleteAction(id);\n  }\n\n  editRecord(id: number) {\n    if(this.editAction)this.editAction(id);\n  }\n\n  addRecord() {\n    if(this.addAction) this.addAction();\n  }\n\n  getValue(record: any, column: string){\n    if(column.indexOf('.') > -1){\n      column.split('.').forEach(key => {\n        record = record[key];\n      });\n      return record;\n    }\n    else{\n      return record[column];\n    }\n  }\n}\n","<table class=\"greenTable\">\n    <thead>\n        <th [hidden]=\"!deleteAction\"></th>\n        <th [hidden]=\"!editAction\"></th>\n        <th *ngFor=\"let column of columns\" >{{column}}</th>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let record of records\">\n            <td [hidden]=\"!deleteAction\"><button (click)=\"deleteRecord(record['id'])\">Del</button></td>\n            <td [hidden]=\"!editAction\"><button (click)=\"editRecord(record['id'])\">Edi</button></td>\n            <td *ngFor=\"let column of columns\">{{getValue(record,column)}}</td>\n        </tr>\n    </tbody>\n    <tfoot [hidden]=\"!addAction\">\n        <td [hidden]=\"!deleteAction\"></td>\n        <td [hidden]=\"!editAction\"></td>\n        <td *ngFor=\"let column of columns.slice(1)\" ></td>\n        <td><button (click)=\"addRecord()\">+</button></td>\n    </tfoot>\n</table>\n","import { Entity } from \"./entity\";\n\nexport class AccountType extends Entity{\n\n    public constructor (\n        private _name: string,\n        id?: number\n    ){\n        super(id);\n    }\n\n    get name(): string {\n        return this._name;\n    }\n\n    set name(name: string) {\n        this._name = name;\n    }\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-side-menu',\n  templateUrl: './side-menu.component.html',\n  styleUrls: ['./side-menu.component.scss']\n})\nexport class SideMenuComponent {\n\n\n  constructor() {   }\n\n  menuMain: any = {\n    title:\"Budget\",\n    links: [\n      {url: \"/summary\", title: \"Summary\"}\n    ],\n    segments: []\n  };\n  \n  menuAdmin: any = {\n    title:\"Admin\",\n    links: [\n      {url: \"/admin/summary\", title:\"Summary\"}\n    ],\n    segments: [\n      {\n        title: \"Data\",\n        links: [],\n        segments: [\n          {\n            title: \"Account Details\",\n            links: [\n              {url: \"/admin/tables/accounttypes\", title:\"Account Types\"},\n              {url: \"/admin/tables/accounts\", title:\"Accounts\"}\n            ]\n          },\n          {\n            title: \"Transaction Details\",\n            links: [\n              {url: \"/admin/tables/categories\", title:\"Categories\"},\n              {url: \"/admin/tables/subcategories\", title:\"Sub Categories\"},\n              {url: \"/admin/tables/schedules\", title:\"Schedules\"},\n              {url: \"/admin/tables/plannedtransactions\", title:\"Planned Transactions\"}\n            ]\n          }\n        ]\n      }\n    ]\n  };\n\n  \n}\n","<nav>\n  <ul>\n    <li>\n      <app-side-menu-segment [content]=\"menuMain\"></app-side-menu-segment>\n    </li>\n    <li>\n      <app-side-menu-segment [content]=\"menuAdmin\"></app-side-menu-segment>\n    </li>\n  </ul>\n</nav>\n    ","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {SummaryPageComponent as BudgetSummary} from './budget/pages/summary-page/summary-page.component'\nimport {SummaryPageComponent as AdminSummary} from './admin/pages/summary-page/summary-page.component'\nimport {AccountTypeComponent} from './admin/pages/tables/account-type/account-type.component'\nimport {AccountComponent} from './admin/pages/tables/account/account.component'\n\nconst routes: Routes = [\n  { path: 'summary', component: BudgetSummary },\n  { path: 'admin/summary', component: AdminSummary },\n  { path: 'admin/tables/accounttypes', component: AccountTypeComponent },\n  { path: 'admin/tables/accounts', component: AccountComponent },\n  { path: '',   redirectTo: '/summary', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}